[tox]
envlist = py39, py310, py311
isolated_build = true
requires = tox>4
setenv =
    # forcibly enable pytest colors
    PY_COLORS = 1
    # disable pkgcore's pytest plugin
    PYTEST_ADDOPTS = -p no:pkgcore

[testenv]
description = run tests for python version
skip_sdist = true
skip_install = true
passenv =
    CFLAGS
    LDFLAGS
    PKG_CONFIG_PATH
setenv =
    # run tests against in-place build for doctest and coverage support
    PYTHONPATH = {toxinidir}/src
    {[tox]setenv}
deps =
    cython ~= 0.29.30
    pytest
    pytest-cython
    tomli ; python_version < '3.11'
commands =
    python setup.py build_ext --inplace
    # run doctests
    pytest --doctest-cython src/pkgcraft
    # run regular tests
    pytest {posargs}

# Note that old, non-coverage-enabled, cythonized modules need to be removed
# for coverage to work properly.
[testenv:coverage]
description = run tests while recording code coverage data
deps =
    coverage
    {[testenv]deps}
commands =
    # build cython extensions with coverage enabled
    python setup.py build_ext --inplace --cython-coverage
    # run doctests
    coverage run -m pytest --doctest-cython src/pkgcraft
    # run regular tests
    coverage run -m pytest {posargs}
    coverage combine
    # generate coverage file for codecov
    coverage xml
    coverage report
    coverage html

[testenv:valgrind]
description = run tests under valgrind to find memory handling issues
allowlist_externals = valgrind
setenv =
    # only load the project's local .valgrindrc config file
    HOME = {toxinidir}
    {[testenv]setenv}
commands =
    python setup.py build_ext --inplace
    # run doctests
    valgrind pytest --doctest-cython src/pkgcraft
    # run regular tests
    valgrind pytest {posargs}

[testenv:bench]
description = run benchmarks against pkgcore, portage, and others
base = tox
deps =
    ordered-set
    pytest-benchmark
    pkgcore
    portage
commands =
    pytest {posargs} benches --benchmark-group-by=func --benchmark-warmup=on

[testenv:membench]
description = run memory usage benchmarks
base = tox
deps =
    pkgcore
    portage
    humanize
    psutil
commands =
    python {toxinidir}/benches/atom_memory_usage.py

[testenv:lint]
description = run various code linting procedures
base = tox
skip_sdist = true
skip_install = true
allowlist_externals = bash
deps =
    cython-lint
    isort
    pylint
commands =
    bash -c "shopt -s extglob globstar nullglob; cython-lint --max-line-length 100 **/*.p{yx,xd}"
    # check for improperly formatted imports in non-generated files
    isort -l 100 -s pkgcraft_c.pxd --check-only --diff benches examples src tests
    # check for unused imports
    pylint --score=no --disable=all --enable=W0611 benches examples tests

[testenv:sdist]
description = build the source distribution
deps = build
commands = python -m build --sdist
