#!/usr/bin/env python
# List all packages matching given restrictions.
#
# Example usage:
# - all pkgs with $PN starting in 'e'
#   query 'e*'
#
# - all non-gentoo repo pkgs:
#   query --restrict '!(repo == "gentoo")'
#
# - maintainer-needed pkgs:
#   query --restrict 'maintainers is none'
#
# - pkgs implicitly using the flag-o-matic eclass:
#   query --restrict 'inherited >= {"flag-o-matic"} && !(inherit >= {"flag-o-matic"})'
#
# - dev-python/* pkgs with DEPEND=media-libs/* deps
#   query --restrict 'depend any "media-libs/*"' 'dev-python/*'

import argparse
from functools import reduce

from pkgcraft.config import Config
from pkgcraft.error import InvalidRestrict
from pkgcraft.restrict import Restrict


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--restrict', metavar='RESTRICT', dest='restricts', action='append')
    parser.add_argument('targets', metavar='TARGET', nargs='*')
    args = parser.parse_args()

    # convert strings to restrictions
    restricts = []
    if args.restricts:
        try:
            pkg_restricts = map(Restrict.pkg, args.restricts)
            restricts.append(reduce(lambda x, y: x & y, pkg_restricts))
        except InvalidRestrict as e:
            raise SystemExit(e)
    if args.targets:
        try:
            target_restricts = map(Restrict.dep, args.targets)
            restricts.append(reduce(lambda x, y: x | y, target_restricts))
        except InvalidRestrict as e:
            raise SystemExit(e)

    # combine pkg and target restrictions
    r = reduce(lambda x, y: x & y, restricts)

    config = Config(repos_conf=True)
    for pkg in config.repos.ebuild.iter_restrict(r):
        print(pkg)


if __name__ == '__main__':
    main()
