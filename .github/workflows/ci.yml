name: CI

on:
  push:
    branches-ignore: [audit,deploy]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10']
        rust-version: ['1.56.0', '1.58.1']
        experimental: [false]

    steps:
    - name: Checkout scallop
      uses: actions/checkout@v2
      with:
        repository: pkgcraft/scallop
        path: scallop
        submodules: true

    - name: Move scallop into expected location
      run: mv scallop ../

    - name: Checkout pkgcraft
      uses: actions/checkout@v2
      with:
        repository: pkgcraft/pkgcraft
        path: pkgcraft

    - name: Move pkgcraft into expected location
      run: mv pkgcraft ../

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Update deps
      run: cargo update

    - name: Set up rust cache
      uses: actions/cache@v2
      id: cache
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          ~/.rustup
          target
        key: v1-${{ github.job }}-${{ runner.os }}-rust-${{ matrix.rust-version }}-cargo-${{ hashFiles('Cargo.lock') }}
        restore-keys: v1-${{ github.job }}-${{ runner.os }}-rust-${{ matrix.rust-version }}-cargo-

    - name: Set up rust toolchain ${{ matrix.rust-version }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-version }}
        profile: minimal
        override: true
        components: rustfmt

    - name: Install dependencies
      run: pip install tox

    - name: Run tests via tox
      run: |
        tox -e python
        # don't cache wheels via rust-cache
        rm -rf target/wheels

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout scallop
      uses: actions/checkout@v2
      with:
        repository: pkgcraft/scallop
        path: scallop
        submodules: true

    - name: Move scallop into expected location
      run: mv scallop ../

    - name: Checkout pkgcraft
      uses: actions/checkout@v2
      with:
        repository: pkgcraft/pkgcraft
        path: pkgcraft

    - name: Move pkgcraft into expected location
      run: mv pkgcraft ../

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Update deps
      run: cargo update

    - name: Set up rust cache
      uses: actions/cache@v2
      id: cache
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          ~/.rustup
          target
        key: v1-${{ github.job }}-${{ runner.os }}-rust-${{ matrix.rust-version }}-cargo-${{ hashFiles('Cargo.lock') }}
        restore-keys: v1-${{ github.job }}-${{ runner.os }}-rust-${{ matrix.rust-version }}-cargo-

    - name: Set up rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: '1.58.1'
        profile: minimal
        override: true
        components: clippy, rustfmt

    - name: Run rustfmt
      run: cargo fmt --all -- --check

    - name: Run clippy
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
