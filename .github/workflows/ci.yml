name: CI

on:
  push:
    branches-ignore: [audit,deploy]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.10']

    steps:
    - name: Checkout scallop
      uses: actions/checkout@v3
      with:
        repository: pkgcraft/scallop
        path: scallop
        submodules: true

    - name: Move scallop into expected location
      run: mv scallop ../

    - name: Checkout pkgcraft
      uses: actions/checkout@v3
      with:
        repository: pkgcraft/pkgcraft
        path: pkgcraft

    - name: Move pkgcraft into expected location
      run: mv pkgcraft ../

    - name: Checkout pkgcraft-c
      uses: actions/checkout@v3
      with:
        repository: pkgcraft/pkgcraft-c
        path: pkgcraft-c

    - name: Move pkgcraft-c into expected location
      run: mv pkgcraft-c ../

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        # checkout full history for setuptools-scm
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up rust toolchain
      uses: actions-rs/toolchain@v1
      id: rust
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Set up cache
      uses: actions/cache@v3
      id: cache
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          ~/.cache/pip
          .tox
          target
        key: v5-${{ github.job }}-${{ runner.os }}-rust-${{ steps.rust.outputs.rustc_hash }}
        restore-keys: v5-${{ github.job }}-${{ runner.os }}-rust-

    - name: Update deps
      run: cargo update --manifest-path=../pkgcraft-c/Cargo.toml

    - name: Install cargo-c
      run: |
        # ignore return value since `cargo install` errors out when already installed
        cargo install cargo-c || true

    - name: Build and install C library
      run: |
        cargo cinstall --manifest-path=../pkgcraft-c/Cargo.toml --prefix="${PWD}/pkgcraft" --pkgconfigdir="${PWD}/pkgcraft" --target-dir target
        echo "PKG_CONFIG_PATH=${PWD}/pkgcraft" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=${PWD}/pkgcraft/lib" >> $GITHUB_ENV
        echo "DYLD_LIBRARY_PATH=${PWD}/pkgcraft/lib" >> $GITHUB_ENV

    - name: Install dependencies
      run: pip install tox

    - name: Run tests via tox
      run: tox -e python

    - name: Run benchmarks via tox
      run: tox -e bench
