name: CI

on:
  push:
    branches-ignore: [audit,deploy]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.10']

    steps:
    - name: Checkout workspace
      uses: actions/checkout@v3
      with:
        repository: pkgcraft/pkgcraft-workspace
        submodules: recursive

    - name: Pull submodule updates
      run: git submodule update --recursive --remote

    - name: Remove current repo from workspace
      run: rm -rfv ${{ github.event.repository.name }}

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        # checkout full history for setuptools-scm
        fetch-depth: 0
        path: ${{ github.event.repository.name }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up rust toolchain
      uses: actions-rs/toolchain@v1
      id: rust
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Set up cache
      uses: actions/cache@v3
      id: cache
      with:
        path: |
          ~/.cargo/bin
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          ~/.cache/pip
          .tox
          target
        key: v6-${{ github.job }}-${{ runner.os }}-rust-${{ steps.rust.outputs.rustc_hash }}
        restore-keys: v6-${{ github.job }}-${{ runner.os }}-rust-

    - name: Update deps
      run: cargo update -p pkgcraft-c

    - name: Install cargo-c
      run: |
        # ignore return value since `cargo install` errors out when already installed
        cargo install cargo-c || true

    - name: Build and install C library
      run: |
        cargo cinstall -p pkgcraft-c --prefix="${PWD}/pkgcraft" --pkgconfigdir="${PWD}/pkgcraft"
        echo "PKG_CONFIG_PATH=${PWD}/pkgcraft" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=${PWD}/pkgcraft/lib" >> $GITHUB_ENV
        echo "DYLD_LIBRARY_PATH=${PWD}/pkgcraft/lib" >> $GITHUB_ENV

    - name: Install dependencies
      run: pip install tox

    - name: Run tests via tox
      working-directory: pkgcraft-python
      run: tox -e coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: pkgcraft-python/coverage.xml

    - name: Run benchmarks via tox
      working-directory: pkgcraft-python
      run: tox -e bench
