name: Deploy

on:
  push:
    branches: [deploy]
    tags: [v*]

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']

    steps:
    - name: Checkout workspace
      uses: actions/checkout@v3
      with:
        repository: pkgcraft/pkgcraft-workspace
        submodules: recursive

    - name: Pull submodule updates
      run: git submodule update --recursive --remote

    - name: Remove current repo from workspace
      run: rm -rfv ${{ github.event.repository.name }}

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        # checkout full history for setuptools-scm
        fetch-depth: 0
        path: ${{ github.event.repository.name }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: pip install cibuildwheel>=2.8 tox

    - name: Build sdist
      working-directory: ${{ github.event.repository.name }}
      run: tox -e sdist

    - name: Build wheels
      run: cibuildwheel --output-dir pkgcraft-python/dist pkgcraft-python

    - name: Output dist file info
      working-directory: ${{ github.event.repository.name }}
      run: |
        sha512sum dist/*
        tar -ztf dist/*.tar.gz | sort

    - name: Install deps and check dist files
      working-directory: ${{ github.event.repository.name }}
      run: |
        pip install twine auditwheel wheel-inspect
        twine check dist/*
        for f in dist/*.whl; do unzip -l $f && auditwheel show $f && wheel2json $f; done

    - name: Upload to PyPI
      working-directory: ${{ github.event.repository.name }}
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      if: startsWith(github.ref, 'refs/tags/')
      run: twine upload dist/*

    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: pkgcraft-python/dist/*.tar.gz
        fail_on_unmatched_files: true
